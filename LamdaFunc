package asds;

import java.io.*;
import java.util.*;

interface PerformOperation {
    boolean check(int a);
}

class MyMath {
    public static boolean checker(PerformOperation p, int num) {
        return p.check(num);
    }

    // Method to check if a number is odd
    public PerformOperation isOdd() {
        return (int a) -> a % 2 != 0;
    }

    // Method to check if a number is prime
    public PerformOperation isPrime() {
        return (int a) -> {
            if (a <= 1) return false;
            for (int i = 2; i <= Math.sqrt(a); i++) {
                if (a % i == 0) return false;
            }
            return true;
        };
    }

    // Method to check if a number is a palindrome
    public PerformOperation isPalindrome() {
        return (int a) -> {
            String str = Integer.toString(a);
            return str.equals(new StringBuilder(str).reverse().toString());
        };
    }
}

public class Solution {
    public static void main(String[] args) {
        MyMath ob = new MyMath();
        int T = 3; // Number of test cases
        int[][] inputs = {
            {1, 5},  // Check if 5 is odd
            {2, 11}, // Check if 11 is prime
            {3, 121} // Check if 121 is a palindrome
        };
        PerformOperation op;
        boolean ret = false;
        String ans = null;
        for (int i = 0; i < T; i++) {
            int ch = inputs[i][0];
            int num = inputs[i][1];
            if (ch == 1) {
                op = ob.isOdd();
                System.out.println();
                ret = ob.checker(op, num);
                ans = (ret) ? "ODD" : "EVEN";
            } else if (ch == 2) {
                op = ob.isPrime();
                ret = ob.checker(op, num);
                ans = (ret) ? "PRIME" : "COMPOSITE";
            } else if (ch == 3) {
                op = ob.isPalindrome();
                ret = ob.checker(op, num);
                ans = (ret) ? "PALINDROME" : "NOT PALINDROME";
            }
            System.out.println(ans);
        }
    }
}
